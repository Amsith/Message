{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript  copy/frontend/src/components/protectedRoute/ProtectedRoute.tsx\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  user: str,\n  children\n}) => {\n  // Check if the user is authenticated\n  if (!user || user.length === 0) {\n    // If not authenticated, redirect to login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  // If authenticated, render the children components (protected route)\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","ProtectedRoute","user","str","children","length","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript  copy/frontend/src/components/protectedRoute/ProtectedRoute.tsx"],"sourcesContent":["import { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ user:str, children }) => {\n  // Check if the user is authenticated\n  if (!user || user.length === 0) {\n    // If not authenticated, redirect to login\n    return <Navigate to=\"/\" />;\n  }\n  // If authenticated, render the children components (protected route)\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI,EAACC,GAAG;EAAEC;AAAS,CAAC,KAAK;EACjD;EACA,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAC9B;IACA,oBAAOL,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EACA;EACA,OAAON,QAAQ;AACjB,CAAC;AAACO,EAAA,GARIV,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}