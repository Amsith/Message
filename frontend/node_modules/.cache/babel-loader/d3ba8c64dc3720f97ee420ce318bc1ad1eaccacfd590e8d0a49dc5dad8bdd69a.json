{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { loadUserRequest, loadUserSuccess, loadUserFail } from '../userSlice'; // Adjust the import path\n\nconst GetUser = async () => {\n  _s();\n  const dispatch = useDispatch();\n  try {\n    dispatch(loadUserRequest());\n\n    // Specify the expected response type (example type for user data)\n    const {\n      load\n    } = await axios.get('http://localhost:5001/api/logedin/user');\n\n    // Access the nested user object correctly\n    dispatch(loadUserSuccess(response));\n  } catch (error) {\n    var _axiosError$response, _axiosError$response$;\n    const axiosError = error; // Use AxiosError with ErrorResponse type\n\n    // Safely access the message property\n    const errorMessage = ((_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : (_axiosError$response$ = _axiosError$response.data) === null || _axiosError$response$ === void 0 ? void 0 : _axiosError$response$.message) || 'Failed to fetch user';\n    console.error(errorMessage);\n    dispatch(loadUserFail(errorMessage));\n    ;\n  }\n};\n_s(GetUser, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = GetUser;\nexport default GetUser;\nvar _c;\n$RefreshReg$(_c, \"GetUser\");","map":{"version":3,"names":["axios","useDispatch","loadUserRequest","loadUserSuccess","loadUserFail","GetUser","_s","dispatch","load","get","response","error","_axiosError$response","_axiosError$response$","axiosError","errorMessage","data","message","console","_c","$RefreshReg$"],"sources":["/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript  copy/frontend/src/components/store/action/actions.tsx"],"sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { loadUserRequest, loadUserSuccess, loadUserFail } from '../userSlice'; // Adjust the import path\n\n\ninterface ErrorResponse {\n    message: string;\n}\n\nconst GetUser = async () => {\n    const dispatch = useDispatch();\n\n    try {\n        dispatch(loadUserRequest());\n\n        // Specify the expected response type (example type for user data)\n        const {load} = await axios.get('http://localhost:5001/api/logedin/user');\n\n        // Access the nested user object correctly\n        dispatch(loadUserSuccess(response));\n    } catch (error) {\n        const axiosError = error as AxiosError<ErrorResponse>; // Use AxiosError with ErrorResponse type\n\n        // Safely access the message property\n        const errorMessage = axiosError.response?.data?.message || 'Failed to fetch user';\n        console.error(errorMessage);\n\n        dispatch(loadUserFail(errorMessage));;\n    }\n};\n\nexport default GetUser;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAsB,OAAO;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,EAAEC,eAAe,EAAEC,YAAY,QAAQ,cAAc,CAAC,CAAC;;AAO/E,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,IAAI;IACAM,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC;;IAE3B;IACA,MAAM;MAACM;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,wCAAwC,CAAC;;IAExE;IACAF,QAAQ,CAACJ,eAAe,CAACO,QAAQ,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IACZ,MAAMC,UAAU,GAAGH,KAAkC,CAAC,CAAC;;IAEvD;IACA,MAAMI,YAAY,GAAG,EAAAH,oBAAA,GAAAE,UAAU,CAACJ,QAAQ,cAAAE,oBAAA,wBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBI,IAAI,cAAAH,qBAAA,uBAAzBA,qBAAA,CAA2BI,OAAO,KAAI,sBAAsB;IACjFC,OAAO,CAACP,KAAK,CAACI,YAAY,CAAC;IAE3BR,QAAQ,CAACH,YAAY,CAACW,YAAY,CAAC,CAAC;IAAC;EACzC;AACJ,CAAC;AAACT,EAAA,CApBID,OAAO;EAAA,QACQJ,WAAW;AAAA;AAAAkB,EAAA,GAD1Bd,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}