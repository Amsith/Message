{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript 2 copy  copy/frontend/src/components/view/ChatDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport profile from '../../pic/profile.png';\nimport '../view/chatDashBoard.css';\nimport { useDispatch } from 'react-redux';\nimport { messageFail } from '../store/userSlice';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDashboard = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [getMessage, setGetMessage] = useState([]); // State to store the chat messages\n\n  const [paramsUser, setParamsUser] = useState({});\n  const socket = io('http://localhost:5001', {\n    withCredentials: true\n  });\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    return () => {\n      socket.disconnect(); // Disconnect when the component unmounts\n    };\n  }, []);\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:5001/api/message/${id}`, {\n        message\n      }, {\n        withCredentials: true\n      });\n      console.log(response.data);\n      setMessage('');\n\n      // Emit the message to the server using socket after it's sent via Axios\n      socket.emit('sendMessage', {\n        message,\n        senderId: id\n      }); // Send the message to the server\n    } catch (error) {\n      var _axiosError$response;\n      // Typecast error as AxiosError to access its properties\n      const axiosError = error; // Cast as `any` if you're unsure\n      const errorResponse = axiosError === null || axiosError === void 0 ? void 0 : (_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : _axiosError$response.data.message;\n\n      // Dispatch error message if it exists\n      if (errorResponse === 'Please login to access') {\n        dispatch(messageFail(errorResponse));\n        navigate('/');\n      } else {\n        console.error('An unexpected error occurred:', error);\n      }\n    }\n  };\n\n  // Listen for incoming messages from the socket server\n\n  // fetching messages and param user to sho the name\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/message/${id}`, {\n          withCredentials: true\n        });\n        setGetMessage(response.data.messages); // Store retrieved messages\n        setParamsUser(response.data.paramsUser); // Store the user data for displaying name\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [id]); // Re-fetch messages when `id` changes\n\n  // Listen for incoming messages from the socket server in real-time\n  useEffect(() => {\n    // Socket event listener for new messages\n    socket.on('receiveMessage', newMessage => {\n      setGetMessage(prevMessages => [...prevMessages, newMessage]); // Append new message\n    });\n\n    // Cleanup the socket listener when the component unmounts\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header border-bottom d-flex align-items-center p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile,\n        alt: \"User Profile\",\n        className: \"profile-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"ms-3\",\n        children: paramsUser.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container p-3\",\n      children: getMessage.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderID === id ? 'receiver-message' : 'sender-message ms-auto'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-text\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), new Date(message.createdAt).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: true\n        })]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-container p-2 d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control me-2\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDashboard, \"Ty72SZVDAKHIzWmIbOrelEbxBto=\", false, function () {\n  return [useDispatch, useNavigate, useParams];\n});\n_c = ChatDashboard;\nexport default ChatDashboard;\nvar _c;\n$RefreshReg$(_c, \"ChatDashboard\");","map":{"version":3,"names":["React","useEffect","useState","profile","useDispatch","messageFail","useNavigate","useParams","axios","io","jsxDEV","_jsxDEV","ChatDashboard","_s","message","setMessage","dispatch","navigate","id","getMessage","setGetMessage","paramsUser","setParamsUser","socket","withCredentials","on","console","log","disconnect","sendMessage","e","preventDefault","response","post","data","emit","senderId","error","_axiosError$response","axiosError","errorResponse","fetchMessages","get","messages","newMessage","prevMessages","off","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","map","index","senderID","Date","createdAt","toLocaleTimeString","hour","minute","hour12","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript 2 copy  copy/frontend/src/components/view/ChatDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport profile from '../../pic/profile.png';\nimport '../view/chatDashBoard.css';\nimport { useDispatch } from 'react-redux';\nimport { messageFail } from '../store/userSlice';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\n\n\nconst ChatDashboard = () => {\n\n  const [message, setMessage] = useState<string>('');\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [getMessage, setGetMessage] = useState<any[]>([]); // State to store the chat messages\n\n  const [paramsUser, setParamsUser] = useState<any>({});\n  const socket = io('http://localhost:5001', { withCredentials: true } as any);\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n  \n    return () => {\n      socket.disconnect(); // Disconnect when the component unmounts\n    };\n  }, []);\n\n\n  const sendMessage = async (e: any) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\n        `http://localhost:5001/api/message/${id}`,\n        { message },\n        { withCredentials: true }\n      );\n      console.log(response.data);\n      setMessage('');\n\n      // Emit the message to the server using socket after it's sent via Axios\n      socket.emit('sendMessage', { message, senderId: id }); // Send the message to the server\n\n    } catch (error) {\n      // Typecast error as AxiosError to access its properties\n      const axiosError = error as any; // Cast as `any` if you're unsure\n      const errorResponse = axiosError?.response?.data.message;\n\n      // Dispatch error message if it exists\n      if (errorResponse === 'Please login to access') {\n        dispatch(messageFail(errorResponse));\n        navigate('/')\n      } else {\n        console.error('An unexpected error occurred:', error);\n      }\n    }\n  };\n\n  // Listen for incoming messages from the socket server\n\n\n  // fetching messages and param user to sho the name\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/message/${id}`, {\n          withCredentials: true,\n        });\n        setGetMessage(response.data.messages); // Store retrieved messages\n        setParamsUser(response.data.paramsUser); // Store the user data for displaying name\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n\n    fetchMessages();\n  }, [id]); // Re-fetch messages when `id` changes\n\n  // Listen for incoming messages from the socket server in real-time\n  useEffect(() => {\n    // Socket event listener for new messages\n    socket.on('receiveMessage', (newMessage: any) => {\n      setGetMessage((prevMessages) => [...prevMessages, newMessage]); // Append new message\n    });\n\n    // Cleanup the socket listener when the component unmounts\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [socket]); \n\n  return (\n    <div className=\"chat-dashboard-container\">\n      {/* Profile Header */}\n      <div className=\"header border-bottom d-flex align-items-center p-3\">\n        <img src={profile} alt=\"User Profile\" className=\"profile-img\" />\n        <h5 className=\"ms-3\">{paramsUser.username}</h5>\n      </div>\n\n      {/* Messages Section */}\n      <div className=\"messages-container p-3\">\n        {getMessage.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.senderID === id ? 'receiver-message' : 'sender-message ms-auto'}`}\n          >\n            <p className=\"message-text\">{message.message}</p>\n            {new Date(message.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}\n          </div>\n        ))}\n      </div>\n\n\n      <form onSubmit={sendMessage}>\n        <div className=\"message-input-container p-2 d-flex align-items-center\">\n          <input\n            type=\"text\"\n            className=\"form-control me-2\"\n            placeholder=\"Type your message...\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button type='submit' className=\"btn btn-primary\">Send</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatDashboard;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAO,2BAA2B;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAEzD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAM,CAAC,CAAC,CAAC;EACrD,MAAMqB,MAAM,GAAGd,EAAE,CAAC,uBAAuB,EAAE;IAAEe,eAAe,EAAE;EAAK,CAAQ,CAAC;EAC5EvB,SAAS,CAAC,MAAM;IACdsB,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXJ,MAAM,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,WAAW,GAAG,MAAOC,CAAM,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAC/B,qCAAqCf,EAAE,EAAE,EACzC;QAAEJ;MAAQ,CAAC,EACX;QAAEU,eAAe,EAAE;MAAK,CAC1B,CAAC;MACDE,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC1BnB,UAAU,CAAC,EAAE,CAAC;;MAEd;MACAQ,MAAM,CAACY,IAAI,CAAC,aAAa,EAAE;QAAErB,OAAO;QAAEsB,QAAQ,EAAElB;MAAG,CAAC,CAAC,CAAC,CAAC;IAEzD,CAAC,CAAC,OAAOmB,KAAK,EAAE;MAAA,IAAAC,oBAAA;MACd;MACA,MAAMC,UAAU,GAAGF,KAAY,CAAC,CAAC;MACjC,MAAMG,aAAa,GAAGD,UAAU,aAAVA,UAAU,wBAAAD,oBAAA,GAAVC,UAAU,CAAEP,QAAQ,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBJ,IAAI,CAACpB,OAAO;;MAExD;MACA,IAAI0B,aAAa,KAAK,wBAAwB,EAAE;QAC9CxB,QAAQ,CAACX,WAAW,CAACmC,aAAa,CAAC,CAAC;QACpCvB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLS,OAAO,CAACW,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF,CAAC;;EAED;;EAGA;EACApC,SAAS,CAAC,MAAM;IACd,MAAMwC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMT,QAAQ,GAAG,MAAMxB,KAAK,CAACkC,GAAG,CAAC,qCAAqCxB,EAAE,EAAE,EAAE;UAC1EM,eAAe,EAAE;QACnB,CAAC,CAAC;QACFJ,aAAa,CAACY,QAAQ,CAACE,IAAI,CAACS,QAAQ,CAAC,CAAC,CAAC;QACvCrB,aAAa,CAACU,QAAQ,CAACE,IAAI,CAACb,UAAU,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDI,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACvB,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV;EACAjB,SAAS,CAAC,MAAM;IACd;IACAsB,MAAM,CAACE,EAAE,CAAC,gBAAgB,EAAGmB,UAAe,IAAK;MAC/CxB,aAAa,CAAEyB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXrB,MAAM,CAACuB,GAAG,CAAC,gBAAgB,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZ,oBACEZ,OAAA;IAAKoC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEvCrC,OAAA;MAAKoC,SAAS,EAAC,oDAAoD;MAAAC,QAAA,gBACjErC,OAAA;QAAKsC,GAAG,EAAE9C,OAAQ;QAAC+C,GAAG,EAAC,cAAc;QAACH,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE3C,OAAA;QAAIoC,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAE3B,UAAU,CAACkC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAGN3C,OAAA;MAAKoC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpC7B,UAAU,CAACqC,GAAG,CAAC,CAAC1C,OAAO,EAAE2C,KAAK,kBAC7B9C,OAAA;QAEEoC,SAAS,EAAE,WAAWjC,OAAO,CAAC4C,QAAQ,KAAKxC,EAAE,GAAG,kBAAkB,GAAG,wBAAwB,EAAG;QAAA8B,QAAA,gBAEhGrC,OAAA;UAAGoC,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAElC,OAAO,CAACA;QAAO;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAChD,IAAIK,IAAI,CAAC7C,OAAO,CAAC8C,SAAS,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAC;MAAA,GAJpGP,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN3C,OAAA;MAAMsD,QAAQ,EAAEpC,WAAY;MAAAmB,QAAA,eAC1BrC,OAAA;QAAKoC,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACpErC,OAAA;UACEuD,IAAI,EAAC,MAAM;UACXnB,SAAS,EAAC,mBAAmB;UAC7BoB,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAEtD,OAAQ;UACfuD,QAAQ,EAAGvC,CAAC,IAAKf,UAAU,CAACe,CAAC,CAACwC,MAAM,CAACF,KAAK;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACF3C,OAAA;UAAQuD,IAAI,EAAC,QAAQ;UAACnB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzC,EAAA,CAvHID,aAAa;EAAA,QAGAR,WAAW,EACXE,WAAW,EACbC,SAAS;AAAA;AAAAgE,EAAA,GALpB3D,aAAa;AAyHnB,eAAeA,aAAa;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}