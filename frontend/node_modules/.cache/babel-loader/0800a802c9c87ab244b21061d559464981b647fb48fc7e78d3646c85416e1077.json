{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript 2 copy  copy/frontend/src/components/view/ChatDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport profile from '../../pic/profile.png';\nimport '../view/chatDashBoard.css';\nimport { useDispatch } from 'react-redux';\nimport { messageFail } from '../store/userSlice';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDashboard = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [newMessage, setNewMessage] = useState(''); // State to store the chat messages\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:5001/api/message/${id}`, {\n        message\n      }, {\n        withCredentials: true\n      });\n      console.log(response.data);\n      setMessage('');\n    } catch (error) {\n      var _axiosError$response;\n      // Typecast error as AxiosError to access its properties\n      const axiosError = error; // Cast as `any` if you're unsure\n      const errorResponse = axiosError === null || axiosError === void 0 ? void 0 : (_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : _axiosError$response.data.message;\n\n      // Dispatch error message if it exists\n      if (errorResponse === 'Please login to access') {\n        dispatch(messageFail(errorResponse));\n        navigate('/');\n      } else {\n        console.error('An unexpected error occurred:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/message/${id}`, {\n          withCredentials: true\n        });\n        setMessages(response.data.messages);\n        response.data.messages; // Store retrieved messages\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [id]); // Re-fetch messages when chatWithId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header border-bottom d-flex align-items-center p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile,\n        alt: \"User Profile\",\n        className: \"profile-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"ms-3\",\n        children: \"User Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container p-3\",\n      children: getMessage.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderID === id ? 'receiver-message' : 'sender-message ms-auto'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-text\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-time\",\n          children: message.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-container p-2 d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control me-2\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDashboard, \"XBJIUv547E00YFFat+fMWiXL5Iw=\", false, function () {\n  return [useDispatch, useNavigate, useParams];\n});\n_c = ChatDashboard;\nexport default ChatDashboard;\nvar _c;\n$RefreshReg$(_c, \"ChatDashboard\");","map":{"version":3,"names":["React","useEffect","useState","profile","useDispatch","messageFail","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ChatDashboard","_s","message","setMessage","dispatch","navigate","id","newMessage","setNewMessage","sendMessage","e","preventDefault","response","post","withCredentials","console","log","data","error","_axiosError$response","axiosError","errorResponse","fetchMessages","get","setMessages","messages","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","getMessage","map","index","senderID","createdAt","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mohammedamsith/Desktop/A/Projects/MERN/Seperate/google auth, mailtrap, node, TypeScript 2 copy  copy/frontend/src/components/view/ChatDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport profile from '../../pic/profile.png';\nimport '../view/chatDashBoard.css';\nimport { useDispatch } from 'react-redux';\nimport { messageFail } from '../store/userSlice';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ChatDashboard = () => {\n\n\n  const [message, setMessage] = useState<string>('');\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [newMessage, setNewMessage] = useState<string>('');// State to store the chat messages\n\n\n  \n  const sendMessage = async (e: any) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\n        `http://localhost:5001/api/message/${id}`,\n        { message },\n        { withCredentials: true }\n      );\n      console.log(response.data);\n      setMessage('');\n    } catch (error) {\n\n      // Typecast error as AxiosError to access its properties\n      const axiosError = error as any; // Cast as `any` if you're unsure\n      const errorResponse = axiosError?.response?.data.message;\n\n      // Dispatch error message if it exists\n      if (errorResponse === 'Please login to access') {\n        dispatch(messageFail(errorResponse));\n        navigate('/')\n      } else {\n        console.error('An unexpected error occurred:', error);\n      }\n    }\n  };\n\n\n\n  useEffect(() => {\n      const fetchMessages = async () => {\n          try {\n              const response = await axios.get(`http://localhost:5001/api/message/${id}`, {\n                  withCredentials: true,\n              });\n              setMessages(response.data.messages); (response.data.messages); // Store retrieved messages\n          } catch (error) {\n              console.error('Error fetching messages:', error);\n          } \n      };\n\n      fetchMessages();\n  }, [id]); // Re-fetch messages when chatWithId changes\n\n\n\n\n  return (\n    <div className=\"chat-dashboard-container\">\n      {/* Profile Header */}\n      <div className=\"header border-bottom d-flex align-items-center p-3\">\n        <img src={profile} alt=\"User Profile\" className=\"profile-img\" />\n        <h5 className=\"ms-3\">User Name</h5>\n      </div>\n\n      {/* Messages Section */}\n      <div className=\"messages-container p-3\">\n        {getMessage.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.senderID === id ? 'receiver-message' : 'sender-message ms-auto'}`}\n          >\n            <p className=\"message-text\">{message.message}</p>\n            <p className=\"message-time\">{message.createdAt}</p>\n          </div>\n        ))}\n      </div>\n\n\n      <form onSubmit={sendMessage}>\n        <div className=\"message-input-container p-2 d-flex align-items-center\">\n          <input\n            type=\"text\"\n            className=\"form-control me-2\"\n            placeholder=\"Type your message...\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button type='submit' className=\"btn btn-primary\">Send</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatDashboard;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAO,2BAA2B;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAG1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC,CAAC;;EAIzD,MAAMkB,WAAW,GAAG,MAAOC,CAAM,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,qCAAqCP,EAAE,EAAE,EACzC;QAAEJ;MAAQ,CAAC,EACX;QAAEY,eAAe,EAAE;MAAK,CAC1B,CAAC;MACDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC1Bd,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOe,KAAK,EAAE;MAAA,IAAAC,oBAAA;MAEd;MACA,MAAMC,UAAU,GAAGF,KAAY,CAAC,CAAC;MACjC,MAAMG,aAAa,GAAGD,UAAU,aAAVA,UAAU,wBAAAD,oBAAA,GAAVC,UAAU,CAAER,QAAQ,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBF,IAAI,CAACf,OAAO;;MAExD;MACA,IAAImB,aAAa,KAAK,wBAAwB,EAAE;QAC9CjB,QAAQ,CAACV,WAAW,CAAC2B,aAAa,CAAC,CAAC;QACpChB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLU,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF,CAAC;EAID5B,SAAS,CAAC,MAAM;IACZ,MAAMgC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMV,QAAQ,GAAG,MAAMf,KAAK,CAAC0B,GAAG,CAAC,qCAAqCjB,EAAE,EAAE,EAAE;UACxEQ,eAAe,EAAE;QACrB,CAAC,CAAC;QACFU,WAAW,CAACZ,QAAQ,CAACK,IAAI,CAACQ,QAAQ,CAAC;QAAGb,QAAQ,CAACK,IAAI,CAACQ,QAAQ,CAAE,CAAC;MACnE,CAAC,CAAC,OAAOP,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDI,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAAChB,EAAE,CAAC,CAAC,CAAC,CAAC;;EAKV,oBACEP,OAAA;IAAK2B,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEvC5B,OAAA;MAAK2B,SAAS,EAAC,oDAAoD;MAAAC,QAAA,gBACjE5B,OAAA;QAAK6B,GAAG,EAAEpC,OAAQ;QAACqC,GAAG,EAAC,cAAc;QAACH,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChElC,OAAA;QAAI2B,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAGNlC,OAAA;MAAK2B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCO,UAAU,CAACC,GAAG,CAAC,CAACjC,OAAO,EAAEkC,KAAK,kBAC7BrC,OAAA;QAEE2B,SAAS,EAAE,WAAWxB,OAAO,CAACmC,QAAQ,KAAK/B,EAAE,GAAG,kBAAkB,GAAG,wBAAwB,EAAG;QAAAqB,QAAA,gBAEhG5B,OAAA;UAAG2B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEzB,OAAO,CAACA;QAAO;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDlC,OAAA;UAAG2B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEzB,OAAO,CAACoC;QAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ9CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlC,OAAA;MAAMwC,QAAQ,EAAE9B,WAAY;MAAAkB,QAAA,eAC1B5B,OAAA;QAAK2B,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACpE5B,OAAA;UACEyC,IAAI,EAAC,MAAM;UACXd,SAAS,EAAC,mBAAmB;UAC7Be,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAExC,OAAQ;UACfyC,QAAQ,EAAGjC,CAAC,IAAKP,UAAU,CAACO,CAAC,CAACkC,MAAM,CAACF,KAAK;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFlC,OAAA;UAAQyC,IAAI,EAAC,QAAQ;UAACd,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChC,EAAA,CA7FID,aAAa;EAAA,QAIAP,WAAW,EACXE,WAAW,EACbC,SAAS;AAAA;AAAAiD,EAAA,GANpB7C,aAAa;AA+FnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}